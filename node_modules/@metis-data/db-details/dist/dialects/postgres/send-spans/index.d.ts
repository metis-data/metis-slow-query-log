export declare const sendSpansToBackend: (queriesToSend: any, apiKey: any, metisExporterUrl: any, logFileName: any, metisBackendUrl: any) => Promise<void>;
export declare const makeSpan: (query: any, queryType: any, plan: any, connection: any, logFileName: string) => Promise<{
    parent_id: any;
    name: any;
    kind: string;
    timestamp: number;
    duration: any;
    start_time: string;
    end_time: string;
    attributes: {
        "db.name": any;
        "db.user": any;
        "db.system": string;
        "db.operation": any;
        "db.statement": any;
        "db.statement.metis": string;
        "db.statement.metis.plan": string;
        "net.peer.name": any;
        "net.peer.ip": any;
    };
    status: {
        status_code: string;
    };
    context: {
        span_id: string;
        trace_id: string;
    };
    resource: {
        "app.tag.pr": string;
        "service.name": string;
        "service.version": string;
        "telemetry.sdk.name": string;
        "telemetry.sdk.version": string;
        "telemetry.sdk.language": string;
    };
}>;
export declare function post(url: any, data: any, options: any): Promise<unknown>;
export declare function chuncker(data: any, limit?: number): Generator<any[], any[], unknown>;
export declare function sendMultiSpans(url: any, apiKey: any, spans: any): Promise<any[]>;
export declare const sendSpansFromSlowQueryLog: (metisApikey: any, metisExporterUrl: any, slowQueryLogData: any, connection: any, logFileName: any, metisBackendUrl: any) => Promise<void>;
