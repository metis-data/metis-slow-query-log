export declare type Dialect = "postgres" | "mysql";
export interface SlowQueryLogForeignTable {
    metisApikey: string;
    metisExporterUrl: string;
}
export interface DbDetailsOptions {
    keepClientConnectionOpen?: boolean;
    metisBackendUrl?: string;
    getDbConfig?: boolean;
    getDbAvailableExtensions?: boolean;
    getDbStatStatements?: boolean;
    getDbTableSize?: boolean;
    getDbIndexUsage?: boolean;
    getAllExtraData?: boolean;
}
export interface Connection {
    host: string;
    database: string;
    user: string;
    password: string;
    port?: number;
    ssl?: boolean;
}
export interface Column {
    name: string;
    dataType: string;
    internalName: string;
    isNull: boolean;
    length?: number;
}
export interface PrimaryKey {
    name: string;
    index: any;
    columns: Column[];
    commentData: any;
    sizeInBytes: number;
    numOfColumns: number;
}
export interface Trigger {
    name: string;
    oid: number;
    arrayOid: number;
    category: any;
    classOid: number;
    comment?: string | undefined;
    internalName?: string | undefined;
}
export interface Index {
    name: string;
    relatedColumns: Column[];
    relatedExpressions: string[];
}
export interface Constraint {
    comment: any;
    type: string;
    name: string;
    schema: any;
}
export interface ForeignKey {
    columns: Column[];
    comment: undefined | string;
    index: Index;
    mandatoryParent: boolean;
    name: string;
}
export interface Table {
    schemaName: string;
    name: string;
    tableId: number;
    columns: Column[];
    triggers: Trigger[];
    constraints: Constraint[];
    indexes: Index[];
    pkData: PrimaryKey;
    pk: any;
    fk: any;
}
export interface Schema {
    name: string;
    tables: Table[] | AggregatedTable[];
}
export interface DbDetailsI {
    schemas: Schema[];
}
export interface PartialPgStatsTableData {
    relid: number;
    table_name: string;
    full_table_name: string;
    rows: string;
    dead_rows: string;
    n_mod_since_analyze: string;
    pct_mod_since_analyze: string;
    last_analyze_date: any;
    last_autoanalyze_date: any;
    total_table_size_kb: string;
    table_size_kb: string;
    indexes_size_kb: string;
    total_table_size_pretty: string;
    table_size_pretty: string;
    index_size_pretty: string;
}
export interface RowsAndPagesTableData {
    pages: number;
    relid: number;
    rows: number;
    schema_name: string;
    table_name: string;
}
export interface AggregatedTable extends Table, PartialPgStatsTableData {
}
